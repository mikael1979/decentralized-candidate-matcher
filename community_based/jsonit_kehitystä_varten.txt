[file name]: candidate_profiles.base.json
[file content begin]
{
  "metadata": {
    "version": "{{CANDIDATE_PROFILES_VERSION}}",
    "created": "{{CREATED_TIMESTAMP}}",
    "last_updated": "{{LAST_UPDATED_TIMESTAMP}}",
    "total_candidates": {{TOTAL_CANDIDATES}},
    "total_answers": {{TOTAL_ANSWERS}}
  },
  "candidates": [
    {
      "candidate_id": "{{CANDIDATE_ID}}",
      "basic_info": {
        "name": {
          "fi": "{{CANDIDATE_NAME_FI}}",
          "en": "{{CANDIDATE_NAME_EN}}", 
          "sv": "{{CANDIDATE_NAME_SV}}"
        },
        "party": "{{PARTY_ID}}",
        "district": "{{DISTRICT_ID}}",
        "photo_url": "{{PHOTO_URL}}",
        "contact_info": {
          "email": "{{EMAIL}}",
          "website": "{{WEBSITE}}",
          "social_media": {
            "twitter": "{{TWITTER}}",
            "facebook": "{{FACEBOOK}}"
          }
        }
      },
      "answers": [
        {
          "question_id": {{QUESTION_ID}},
          "answer_value": {{ANSWER_VALUE}},
          "explanation": {
            "fi": "{{EXPLANATION_FI}}",
            "en": "{{EXPLANATION_EN}}",
            "sv": "{{EXPLANATION_SV}}"
          },
          "confidence": {{CONFIDENCE}},
          "last_updated": "{{ANSWER_TIMESTAMP}}"
        }
      ],
      "profile_metadata": {
        "status": "{{STATUS}}",
        "created_at": "{{PROFILE_CREATED_AT}}",
        "last_modified": "{{PROFILE_UPDATED_AT}}",
        "version": "{{PROFILE_VERSION}}",
        "completeness_score": {{COMPLETENESS_SCORE}}
      }
    }
  ],
  "answer_statistics": {
    "average_answers_per_candidate": {{AVG_ANSWERS}},
    "questions_answered": {{QUESTIONS_ANSWERED}},
    "completion_rate": {{COMPLETION_RATE}}
  }
}
[file content end]
[file name]: candidate_structure.base.json
[file content begin]
{
  "candidate_files": {
    "base_templates": [
      "candidate_profiles.base.json",
      "candidates.base.json"
    ],
    "runtime_instances": [
      "candidates.json",
      "candidate_profiles.json", 
      "new_candidate_profiles.json",
      "active_candidate_profiles.json",
      "ipfs_candidate_profiles.json"
    ],
    "temporary_files": [
      "tmp_new_candidate_profiles.json",
      "tmp_candidate_sync.json"
    ]
  },
  "candidate_data_model": {
    "candidate_basic_info": {
      "id": "string",
      "name": {"fi": "string", "en": "string", "sv": "string"},
      "party": "string",
      "district": "string",
      "photo_url": "string",
      "contact_info": {"email": "string", "website": "string"}
    },
    "candidate_answers": {
      "question_id": "integer",
      "answer_value": -5 to 5,
      "explanation": {"fi": "string", "en": "string", "sv": "string"},
      "confidence": 1-5,
      "last_updated": "timestamp"
    },
    "profile_metadata": {
      "status": "active|inactive|pending",
      "created_at": "timestamp",
      "last_modified": "timestamp",
      "version": "string"
    }
  }
}
[file content end]
[file name]: candidate_sync_protocol.base.json
[file content begin]
{
  "candidate_sync_protocol": {
    "data_flow": {
      "step_1": "candidate_input -> tmp_new_candidate_profiles.json",
      "step_2": "tmp_new_candidate_profiles.json -> new_candidate_profiles.json",
      "step_3": "new_candidate_profiles.json -> candidate_profiles.json",
      "step_4": "candidate_profiles.json -> ipfs_candidate_profiles.json", 
      "step_5": "ipfs_candidate_profiles.json -> IPFS_network",
      "answer_flow": "answer_input -> candidate_profiles.json -> ipfs_candidate_profiles.json -> IPFS"
    },
    "validation_rules": {
      "answer_range": "-5 to +5",
      "required_fields": ["candidate_id", "question_id", "answer_value"],
      "max_answers_per_question": 1,
      "completeness_threshold": 0.7
    },
    "sync_triggers": {
      "on_new_candidate": true,
      "on_answer_update": true,
      "auto_sync_interval": 300,
      "on_system_start": true
    }
  }
}
[file content end]
{
  "community": {
    "name": "{{COMMUNITY_NAME}}",
    "description": {
      "fi": "{{COMMUNITY_DESC_FI}}",
      "en": "{{COMMUNITY_DESC_EN}}",
      "sv": "{{COMMUNITY_DESC_SV}}"
    },
    "membership": {
      "type": "{{MEMBERSHIP_TYPE}}",
      "onboarding_process": "{{ONBOARDING_PROCESS}}",
      "reputation_system": {{REPUTATION_SYSTEM_ENABLED}},
      "contribution_rewards": {{CONTRIBUTION_REWARDS}}
    },
    "communication": {
      "forum_url": "{{FORUM_URL}}",
      "chat_url": "{{CHAT_URL}}",
      "notification_channel": "{{NOTIFICATION_CHANNEL}}"
    }
  },
  "decision_making": {
    "proposal_types": [
      {
        "type": "config_change",
        "threshold": {{CONFIG_CHANGE_THRESHOLD}},
        "voting_period": {{CONFIG_VOTING_DAYS}}
      },
      {
        "type": "budget_allocation", 
        "threshold": {{BUDGET_THRESHOLD}},
        "voting_period": {{BUDGET_VOTING_DAYS}}
      },
      {
        "type": "validator_election",
        "threshold": {{ELECTION_THRESHOLD}},
        "voting_period": {{ELECTION_VOTING_DAYS}}
      }
    ]
  }
}
[file name]: community.test.json
[file content begin]
{
  "community": {
    "name": "TestiVaaliYhteisö",
    "description": {
      "fi": "Testivaalien yhteisöhallintajärjestelmä",
      "en": "Test Election Community Governance System",
      "sv": "Testval Gemenskapsstyrningssystem"
    },
    "membership": {
      "type": "token_based",
      "member_count": 500,
      "active_member_count": 350,
      "onboarding_process": "token_verification",
      "reputation_system": true,
      "contribution_rewards": true
    },
    "auto_moderation": {
      "block_required_percentage": 2.0,
      "min_votes_required": 100,
      "max_votes_required": 1000,
      "comparison_delta_required": 800
    },
    "communication": {
      "forum_url": "https://forum.testivaalit.fi",
      "chat_url": "https://chat.testivaalit.fi",
      "notification_channel": "https://discord.testivaalit.fi"
    }
  },
  "decision_making": {
    "proposal_types": [
      {
        "type": "config_change",
        "threshold": 500,
        "voting_period": 7
      },
      {
        "type": "budget_allocation",
        "threshold": 1000, 
        "voting_period": 14
      },
      {
        "type": "validator_election",
        "threshold": 750,
        "voting_period": 10
      }
    ]
  }
}
[file content end]
[file name]: elections_list.json
[file content begin]
{
  "metadata": {
    "version": "1.0.0",
    "created": "2024-01-15T10:00:00.000Z",
    "last_updated": "2024-01-15T10:00:00.000Z",
    "ipfs_cid": "QmElectionsList123456789",
    "description": {
      "fi": "Suomen vaalit - keskitetty konfiguraatio",
      "en": "Finnish Elections - Centralized Configuration", 
      "sv": "Finlands val - Centraliserad konfiguration"
    }
  },
  "elections": [
    {
      "election_id": "president_2024",
      "name": {
        "fi": "Presidentinvaalit 2024",
        "en": "Presidential Election 2024",
        "sv": "Presidentvalet 2024"
      },
      "description": {
        "fi": "Suomen 13. presidentin vaalit",
        "en": "Election of the 13th President of Finland",
        "sv": "Val av Finlands 13:e president"
      },
      "dates": [
        {
          "phase": 1,
          "date": "2024-01-28",
          "description": {
            "fi": "Ensimmäinen vaalipäivä",
            "en": "First election day",
            "sv": "Första valdagen"
          }
        },
        {
          "phase": 2,
          "date": "2024-02-11", 
          "description": {
            "fi": "Toinen vaalipäivä (vaali toisella kierroksella)",
            "en": "Second election day (runoff election)",
            "sv": "Andra valdagen (andra valomgången)"
          }
        }
      ],
      "type": "presidential",
      "phases": 2,
      "timelock_enabled": true,
      "edit_deadline": "2024-01-20",
      "grace_period_hours": 48,
      "community_managed": true,
      "districts": ["koko_maa"],
      "candidate_count": 8,
      "status": "upcoming",
      "config_cid": "QmPresidentConfig2024"
    },
    {
      "election_id": "european_2024",
      "name": {
        "fi": "Europarlamenttivaalit 2024",
        "en": "European Parliament Election 2024",
        "sv": "Europaparlamentsvalet 2024"
      },
      "description": {
        "fi": "Euroopan parlamentin vaalit 2024",
        "en": "European Parliament election 2024",
        "sv": "Europaparlamentsvalet 2024"
      },
      "dates": [
        {
          "phase": 1,
          "date": "2024-06-09",
          "description": {
            "fi": "Europarlamenttivaalien päivä",
            "en": "European Parliament election day",
            "sv": "Europaparlamentsvalets dag"
          }
        }
      ],
      "type": "european_parliament",
      "phases": 1,
      "timelock_enabled": true,
      "edit_deadline": "2024-06-01",
      "grace_period_hours": 24,
      "community_managed": true,
      "districts": ["koko_maa"],
      "candidate_count": 14,
      "status": "upcoming",
      "config_cid": "QmEuropeanConfig2024"
    },
    {
      "election_id": "municipal_2025",
      "name": {
        "fi": "Kunnallisvaalit 2025",
        "en": "Municipal Election 2025", 
        "sv": "Kommunalvalet 2025"
      },
      "description": {
        "fi": "Kunnallisvaalit 2025",
        "en": "Municipal election 2025",
        "sv": "Kommunalvalet 2025"
      },
      "dates": [
        {
          "phase": 1,
          "date": "2025-04-13",
          "description": {
            "fi": "Kunnallisvaalien päivä",
            "en": "Municipal election day",
            "sv": "Kommunalvalets dag"
          }
        }
      ],
      "type": "municipal",
      "phases": 1,
      "timelock_enabled": true,
      "edit_deadline": "2025-04-05",
      "grace_period_hours": 24,
      "community_managed": true,
      "districts": ["helsinki", "espoo", "vantaa", "turku", "tampere", "oulu"],
      "candidate_count": null,
      "status": "planned",
      "config_cid": "QmMunicipalConfig2025"
    }
  ],
  "election_types": {
    "presidential": {
      "description": {
        "fi": "Presidentinvaalit",
        "en": "Presidential elections", 
        "sv": "Presidentval"
      },
      "term_years": 6,
      "max_terms": 2
    },
    "european_parliament": {
      "description": {
        "fi": "Europarlamenttivaalit",
        "en": "European Parliament elections",
        "sv": "Europaparlamentsval"
      },
      "term_years": 5,
      "max_terms": null
    },
    "parliamentary": {
      "description": {
        "fi": "Eduskuntavaalit",
        "en": "Parliamentary elections",
        "sv": "Riksdagsval"
      },
      "term_years": 4,
      "max_terms": null
    },
    "municipal": {
      "description": {
        "fi": "Kunnallisvaalit",
        "en": "Municipal elections",
        "sv": "Kommunalval"
      },
      "term_years": 4,
      "max_terms": null
    }
  },
  "system_config": {
    "default_timelock_enabled": true,
    "default_grace_period_hours": 48,
    "default_community_managed": true,
    "supported_languages": ["fi", "en", "sv"],
    "version_control": true,
    "ipfs_backed": true
  }
}
[file content end]
[file name]: file_states.base.json
[file content begin]
{
  "file_states": {
    "tmp_new_questions.json": {
      "purpose": "Väliaikainen säilö uusille kysymyksille",
      "lifecycle": "transient",
      "auto_cleanup": true,
      "sync_priority": "HIGH"
    },
    "new_questions.json": {
      "purpose": "Odottavat kysymykset synkronointia varten",
      "lifecycle": "persistent", 
      "auto_cleanup": false,
      "sync_priority": "HIGH"
    },
    "questions.json": {
      "purpose": "Pääkysymyskanta",
      "lifecycle": "persistent",
      "auto_cleanup": false,
      "sync_priority": "HIGH"
    },
    "ipfs_questions.json": {
      "purpose": "IPFS-mirror lokalisaatiossa",
      "lifecycle": "persistent",
      "auto_cleanup": false,
      "sync_priority": "MEDIUM"
    }
  }
}
[file content end]
[file name]: file_structure.base.json
[file content begin]
{
  "file_hierarchy": {
    "base_templates": {
      "purpose": "Alkuperäinen rakenne, ei koskaan muokata suoraan",
      "files": [
        "questions.base.json",
        "meta.base.json", 
        "governance.base.json",
        "community.base.json",
        "install_config.base.json",
        "system_chain.base.json",
        "ipfs.base.json",
        "ipfs_conf.base.json"
      ]
    },
    "runtime_instances": {
      "purpose": "Kloonatut käyttöversiot, näitä ohjelma käsittelee",
      "files": [
        "questions.json",
        "new_questions.json", 
        "active_questions.json",
        "ipfs_questions.json",
        "parties.json",
        "party_profiles.json",
        "candidates.json",
        "candidate_profiles.json",
        "meta.json"
      ]
    },
    "temporary_files": {
      "purpose": "Väliaikaiset työskentelytiedostot",
      "files": [
        "tmp_new_questions.json",
        "tmp_active_questions.json",
        "tmp_sync_*.json"
      ]
    }
  }
}
[file content end]
{
  "governance": {
    "model": "{{GOVERNANCE_MODEL}}",
    "community_token": "{{COMMUNITY_TOKEN}}",
    "proposal_threshold": {{PROPOSAL_THRESHOLD}},
    "voting_quorum": {{VOTING_QUORUM}},
    "execution_delay_hours": {{EXECUTION_DELAY_HOURS}},
    "roles": {
      "validators": {
        "count": {{VALIDATOR_COUNT}},
        "stake_required": {{VALIDATOR_STAKE}},
        "election_frequency": "{{VALIDATOR_ELECTION_FREQ}}"
      },
      "moderators": {
        "count": {{MODERATOR_COUNT}},
        "reputation_required": {{MODERATOR_REPUTATION}},
        "selection_method": "{{MODERATOR_SELECTION}}"
      }
    }
  },
  "treasury": {
    "management": "community_multisig",
    "signatures_required": {{MULTISIG_SIGNATURES}},
    "max_single_transfer": {{MAX_SINGLE_TRANSFER}},
    "budget_approval_threshold": {{BUDGET_APPROVAL_THRESHOLD}}
  }
}
[file name]: governance.test.json
[file content begin]
{
  "governance": {
    "model": "community_driven",
    "community_token": "0xCommunityToken123456",
    "proposal_threshold": 1000,
    "voting_quorum": 15,
    "execution_delay_hours": 24,
    "roles": {
      "validators": {
        "count": 7,
        "stake_required": 5000,
        "election_frequency": "6_months"
      },
      "moderators": {
        "count": 3,
        "reputation_required": 100,
        "selection_method": "community_vote"
      }
    }
  },
  "treasury": {
    "management": "community_multisig",
    "signatures_required": 3,
    "max_single_transfer": 10000,
    "budget_approval_threshold": 25
  }
}
[file content end]
{
  "election_data": {
    "id": "{{ELECTION_ID}}",
    "ipfs_cid": "{{ELECTION_IPFS_CID}}",
    "name": {
      "fi": "{{ELECTION_NAME_FI}}",
      "en": "{{ELECTION_NAME_EN}}",
      "sv": "{{ELECTION_NAME_SV}}"
    },
    "date": "{{ELECTION_DATE}}",
    "type": "{{ELECTION_TYPE}}",
    "timelock_enabled": {{ELECTION_TIMELOCK_ENABLED}},
    "edit_deadline": "{{ELECTION_EDIT_DEADLINE}}",
    "grace_period_hours": {{ELECTION_GRACE_PERIOD_HOURS}},
    "community_managed": true
  },
  "community_governance": {
    "multisig_wallet": "{{MULTISIG_WALLET}}",
    "proposal_system": "{{PROPOSAL_SYSTEM_URL}}",
    "voting_contract": "{{VOTING_CONTRACT}}",
    "emergency_council": {
      "members": {{EMERGENCY_COUNCIL_COUNT}},
      "activation_threshold": {{EMERGENCY_THRESHOLD}}
    }
  }
}
{
  "election_data": {
    "id": "testivaalit",
    "ipfs_cid": "",
    "name": {
      "fi": "",
      "en": "",
      "sv": ""
    },
    "date": "",
    "type": "",
    "timelock_enabled": true,
    "edit_deadline": "",
    "grace_period_hours": 24
  },
  "admin_data": {
    "name": "",
    "username": "",
    "email": "",
    "role": "",
    "admin_id": ""
  }
}
[file name]: install_config.test.json
[file content begin]
{
  "election_data": {
    "id": "testivaalit_2024",
    "ipfs_cid": "QmTest123456789",
    "name": {
      "fi": "Testivaalit 2024",
      "en": "Test Election 2024", 
      "sv": "Testval 2024"
    },
    "date": "2024-12-01",
    "type": "community_test",
    "timelock_enabled": true,
    "edit_deadline": "2024-11-15",
    "grace_period_hours": 48,
    "community_managed": true
  },
  "community_governance": {
    "multisig_wallet": "0x742d35Cc6634C0532925a3b8D6B5d7a7a3b8D6B5",
    "proposal_system": "https://forum.testivaalit.fi",
    "voting_contract": "0x8a3b8D6B5d7a7a3b8D6B5d7a7a3b8D6B5d7a7a3b8",
    "emergency_council": {
      "members": 5,
      "activation_threshold": 3
    }
  }
}
[file content end]
{
  "version": "0.0.1-alpha",
  "default_questions": [
    {
      "id": 1,
      "category": {""},
      "question": {
        "fi": "",
        "en": "",
        "sv": ""
      },
      "tags": [""],
      "scale": {"min": -5, "max": 5}
    },
    {
      "id": 2,
      "category": {""},
      "question": {
        "fi": "",
        "en": "",
        "sv": ""
      },
      "tags": [""],
      "scale": {"min": -5, "max": 5}
    }
  ],
  "default_candidates": [
    {
      "name": "",
      "party": "",
      "answers": [
        {"question_id": 1, "answer": , "confidence": },
        {"question_id": 2, "answer": , "confidence": }
      ]
    },
    {
      "name": "",
      "party": "",
      "answers": [
        {"question_id": 1, "answer": 2, "confidence": },
        {"question_id": 2, "answer": 5, "confidence": }
      ]
    }
  ],
  "justifications": {
    "fi": {
      "q1_pos": "",
      "q1_neg": "",
      "q2_pos": "",
      "q2_neg": ""
    },
    "en": {
      "q1_pos": "",
      "q1_neg": "",
      "q2_pos": "",
      "q2_neg": ""
    },
    "sv": {
      "q1_pos": "",
      "q1_neg": "",
      "q2_pos": "",
      "q2_neg": ""
    }
  }
}
[file name]: ipfs_conf.json
[file content begin]
{
  "ipfs_config": {
    "api_endpoint": "{{IPFS_API_ENDPOINT}}",
    "gateway_url": "{{IPFS_GATEWAY_URL}}",
    "pin_enabled": {{IPFS_PIN_ENABLED}},
    "replication_factor": {{IPFS_REPLICATION_FACTOR}},
    "timeout_seconds": {{IPFS_TIMEOUT_SECONDS}},
    "auto_upload": {
      "questions": {{AUTO_UPLOAD_QUESTIONS}},
      "candidates": {{AUTO_UPLOAD_CANDIDATES}},
      "results": {{AUTO_UPLOAD_RESULTS}}
    },
    "pinning_services": [
      {
        "name": "{{PINNING_SERVICE_1_NAME}}",
        "endpoint": "{{PINNING_SERVICE_1_ENDPOINT}}",
        "api_key": "{{PINNING_SERVICE_1_API_KEY}}"
      }
    ]
  },
  "content_addressing": {
    "cid_version": 1,
    "hash_algorithm": "sha2-256",
    "raw_leaves": true
  },
  "storage_management": {
    "max_storage_gb": {{MAX_STORAGE_GB}},
    "cleanup_interval_hours": {{CLEANUP_INTERVAL_HOURS}},
    "retention_policy": "{{RETENTION_POLICY}}",
    "backup_enabled": {{BACKUP_ENABLED}}
  }
}
[file content end]
[file name]: ipfs_conf.test.json
[file content begin]
{
  "ipfs_config": {
    "api_endpoint": "http://localhost:5001",
    "gateway_url": "http://localhost:8080",
    "pin_enabled": true,
    "replication_factor": 3,
    "timeout_seconds": 30,
    "auto_upload": {
      "questions": true,
      "candidates": true,
      "results": true
    },
    "pinning_services": [
      {
        "name": "test_pinning_service",
        "endpoint": "https://pinata.test.com",
        "api_key": "test_api_key_123"
      }
    ]
  },
  "content_addressing": {
    "cid_version": 1,
    "hash_algorithm": "sha2-256",
    "raw_leaves": true
  },
  "storage_management": {
    "max_storage_gb": 10,
    "cleanup_interval_hours": 24,
    "retention_policy": "keep_pinned",
    "backup_enabled": true
  }
}
[file content end]
[file name]: ipfs_filter_rules.base.json
[file content begin]
{
  "ipfs_sync_filters": {
    "local_to_ipfs": {
      "filter_criteria": "ipfs_cid IS NULL AND source IN ['local']",
      "description": "Vain paikallisesti lisätyt kysymykset ilman CID:ä synkronoidaan IPFS:ään",
      "prevent_duplicates": true
    },
    "ipfs_to_local": {
      "filter_criteria": "ipfs_cid IS NOT NULL AND local_id NOT IN existing_local_ids",
      "description": "Vain IPFS:stä tuodut kysymykset joita ei ole jo paikallisesti",
      "conflict_resolution": "use_ipfs_version_if_newer"
    },
    "cid_management": {
      "local_questions_get_cid_on_sync": true,
      "ipfs_questions_keep_existing_cid": true,
      "prevent_cid_regeneration": true
    }
  }
}
[file content end]
[file name]: ipfs.json
[file content begin]
{
  "ipfs_nodes": [
    {
      "node_id": "{{NODE_1_ID}}",
      "address": "{{NODE_1_ADDRESS}}",
      "peer_id": "{{NODE_1_PEER_ID}}",
      "role": "{{NODE_1_ROLE}}",
      "location": "{{NODE_1_LOCATION}}",
      "storage_capacity_gb": {{NODE_1_STORAGE_GB}},
      "status": "{{NODE_1_STATUS}}",
      "last_health_check": "{{NODE_1_LAST_CHECK}}"
    }
  ],
  "network_config": {
    "bootstrap_nodes": [
      "{{BOOTSTRAP_NODE_1}}",
      "{{BOOTSTRAP_NODE_2}}",
      "{{BOOTSTRAP_NODE_3}}"
    ],
    "swarm_port": {{SWARM_PORT}},
    "api_port": {{API_PORT}},
    "gateway_port": {{GATEWAY_PORT}},
    "enable_relay": {{ENABLE_RELAY}},
    "enable_nat": {{ENABLE_NAT}}
  },
  "content_registry": {
    "election_data_cid": "{{ELECTION_DATA_CID}}",
    "questions_cid": "{{QUESTIONS_CID}}",
    "candidates_cid": "{{CANDIDATES_CID}}",
    "results_cid": "{{RESULTS_CID}}",
    "governance_cid": "{{GOVERNANCE_CID}}",
    "last_updated": "{{LAST_UPDATED_TIMESTAMP}}"
  },
  "replication_strategy": {
    "min_replicas": {{MIN_REPLICAS}},
    "target_replicas": {{TARGET_REPLICAS}},
    "max_replicas": {{MAX_REPLICAS}},
    "geo_distribution": {{GEO_DISTRIBUTION_ENABLED}},
    "priority_content": [
      "election_data",
      "questions",
      "candidates",
      "results"
    ]
  },
  "monitoring": {
    "health_checks": {
      "interval_minutes": {{HEALTH_CHECK_INTERVAL}},
      "timeout_seconds": {{HEALTH_CHECK_TIMEOUT}},
      "alert_threshold": {{ALERT_THRESHOLD}}
    },
    "metrics": {
      "bandwidth_usage": {{BANDWIDTH_MONITORING}},
      "storage_usage": {{STORAGE_MONITORING}},
      "uptime_tracking": {{UPTIME_TRACKING}}
    }
  }
}
[file content end]
[file name]: ipfs.test.json
[file content begin]
{
  "ipfs_nodes": [
    {
      "node_id": "node_001",
      "address": "/ip4/127.0.0.1/tcp/4001",
      "peer_id": "QmNode001PeerId123456789",
      "role": "primary",
      "location": "localhost",
      "storage_capacity_gb": 50,
      "status": "online",
      "last_health_check": "2024-01-15T10:00:00Z"
    }
  ],
  "network_config": {
    "bootstrap_nodes": [
      "/dns4/bootstrap.testivaalit.fi/tcp/4001/p2p/QmBootstrap1",
      "/dns4/bootstrap2.testivaalit.fi/tcp/4001/p2p/QmBootstrap2"
    ],
    "swarm_port": 4001,
    "api_port": 5001,
    "gateway_port": 8080,
    "enable_relay": true,
    "enable_nat": true
  },
  "content_registry": {
    "election_data_cid": "QmTest123456789",
    "questions_cid": "QmQuestions123456",
    "candidates_cid": "QmCandidates123456",
    "results_cid": "",
    "governance_cid": "QmGovernance123456",
    "last_updated": "2024-01-15T10:00:00Z"
  },
  "replication_strategy": {
    "min_replicas": 2,
    "target_replicas": 3,
    "max_replicas": 5,
    "geo_distribution": false,
    "priority_content": [
      "election_data",
      "questions",
      "candidates",
      "results"
    ]
  },
  "monitoring": {
    "health_checks": {
      "interval_minutes": 5,
      "timeout_seconds": 10,
      "alert_threshold": 3
    },
    "metrics": {
      "bandwidth_usage": true,
      "storage_usage": true,
      "uptime_tracking": true
    }
  }
}
[file content end]
{
  "election": {
    "id": "{{ELECTION_ID}}",
    "name": {
      "fi": "{{ELECTION_NAME_FI}}",
      "en": "{{ELECTION_NAME_EN}}",
      "sv": "{{ELECTION_NAME_SV}}"
    },
    "date": "{{ELECTION_DATE}}",
    "type": "{{ELECTION_TYPE}}",
    "timelock_enabled": {{ELECTION_TIMELOCK_ENABLED}},
    "edit_deadline": "{{ELECTION_EDIT_DEADLINE}}",
    "grace_period_hours": {{ELECTION_GRACE_PERIOD_HOURS}},
    "governance_model": "community_driven"
  },
  "system_info": {
    "system_id": "{{SYSTEM_ID}}",
    "public_key": "{{SYSTEM_PUBLIC_KEY}}",
    "created": "{{SYSTEM_CREATED_TIMESTAMP}}",
    "governance_contract": "{{GOVERNANCE_CONTRACT_ADDRESS}}"
  },
  "community_governance": {
    "validators": [
      {
        "address": "{{VALIDATOR_1_ADDRESS}}",
        "role": "technical",
        "elected_date": "{{VALIDATOR_1_ELECTED}}",
        "term_end": "{{VALIDATOR_1_TERM_END}}"
      }
    ],
    "current_proposals": [],
    "voting_parameters": {
      "quorum": {{COMMUNITY_QUORUM}},
      "approval_threshold": {{COMMUNITY_APPROVAL_THRESHOLD}}
    }
  },
  "version": "{{SYSTEM_VERSION}}"
}
{
  "election": {
    "id": "testivaalit",
    "name": {
      "fi": "testivaalit",
      "en": "",
      "sv": ""
    },
    "date": "",
    "type": "municipal",
    "timelock_enabled": true,
    "edit_deadline": "",
    "grace_period_hours": 24
  },
  "system_info": {
    "system_id": "",
    "public_key": "",
    "created": ""
  },
  "admin": {
    "name": "",
    "username": "",
    "email": "",
    "role": "",
    "admin_id": ""
  },
  "version": "0.0.1-alpha"
}
[file name]: meta.test.json
[file content begin]
{
  "election": {
    "id": "testivaalit_2024",
    "name": {
      "fi": "Testivaalit 2024",
      "en": "Test Election 2024",
      "sv": "Testval 2024"
    },
    "date": "2024-12-01",
    "type": "community_test",
    "timelock_enabled": true,
    "edit_deadline": "2024-11-15",
    "grace_period_hours": 48,
    "governance_model": "community_driven"
  },
  "system_info": {
    "system_id": "sys_test_001",
    "public_key": "0xPublicKey1234567890abcdef",
    "created": "2024-01-15T10:00:00Z",
    "governance_contract": "0xGovernanceContract123456"
  },
  "community_governance": {
    "validators": [
      {
        "address": "0xValidator1Address123456789",
        "role": "technical",
        "elected_date": "2024-01-01",
        "term_end": "2024-07-01"
      }
    ],
    "current_proposals": [],
    "auto_moderation": {
      "blocked_questions": 0,
      "auto_block_threshold": 0,
      "block_rate_percentage": 0
    },
    "voting_parameters": {
      "quorum": 15,
      "approval_threshold": 60
    }
  },
  "version": "0.1.0-test"
}
[file content end]
[file name]: mock_config.json
[file content begin]
{
  "mock_ipfs_settings": {
    "enabled": true,
    "persist_data": true,
    "data_file": "mock_ipfs_data.json",
    "auto_generate_cids": true,
    "simulate_network_delay": false,
    "simulate_errors": false,
    "error_rate_percentage": 0
  },
  "testing_features": {
    "auto_clear_on_start": false,
    "generate_sample_data": true,
    "sample_question_count": 5,
    "enable_logging": true
  },
  "migration_preparation": {
    "track_real_cid_format": true,
    "compatible_with_real_ipfs": true,
    "export_mock_data": true
  }
}
[file content end]
[file name]: questions.base.json
[file content begin]
{
  "metadata": {
    "version": "{{VERSION}}",
    "local_system_id": "{{LOCAL_SYSTEM_ID}}",
    "created": "{{CREATED_TIMESTAMP}}",
    "last_updated": "{{LAST_UPDATED_TIMESTAMP}}",
    "last_sync": "{{LAST_SYNC_TIMESTAMP}}",
    "sync_status": {
      "local_modified": true,
      "ipfs_synced": false,
      "pending_new_questions": {{PENDING_COUNT}}
    }
  },
  "questions": [
    {
      "local_id": "{{LOCAL_UUID}}",
      "ipfs_cid": null,
      "source": "local",
      "global_version": 1,
      "timestamps": {
        "created_local": "2024-01-15T10:30:45.123Z",
        "modified_local": "2024-01-15T10:30:45.123Z",
        "synced_to_ipfs": null,
        "imported_from_ipfs": null
      },
      "content": {
        "category": {
          "fi": "{{Q1_CATEGORY_FI}}",
          "en": "{{Q1_CATEGORY_EN}}",
          "sv": "{{Q1_CATEGORY_SV}}"
        },
        "question": {
          "fi": "{{Q1_QUESTION_FI}}",
          "en": "{{Q1_QUESTION_EN}}",
          "sv": "{{Q1_QUESTION_SV}}"
        },
        "tags": ["{{Q1_TAG1}}", "{{Q1_TAG2}}"],
        "scale": {"min": -5, "max": 5}
      },
      "elo_rating": {
        "base_rating": 1000,
        "comparison_delta": 0,
        "vote_delta": 0,
        "current_rating": 1000
      }
    },
    {
      "local_id": "{{LOCAL_UUID}}",
      "ipfs_cid": "QmIPFSCid123456789",
      "source": "ipfs",
      "global_version": 1,
      "timestamps": {
        "created_local": "2024-01-15T10:30:45.123Z",
        "modified_local": "2024-01-15T10:30:45.123Z",
        "synced_to_ipfs": "2024-01-15T09:15:30.456Z",
        "imported_from_ipfs": "2024-01-15T10:30:45.123Z"
      },
      "content": {
        "category": {
          "fi": "IPFS-kysymys",
          "en": "IPFS Question",
          "sv": "IPFS Fråga"
        },
        "question": {
          "fi": "Tämä kysymys on tuotu IPFS:stä?",
          "en": "This question was imported from IPFS?",
          "sv": "Den här frågan importerades från IPFS?"
        },
        "tags": ["ipfs", "imported"],
        "scale": {"min": -5, "max": 5}
      },
      "elo_rating": {
        "base_rating": 1000,
        "comparison_delta": 25,
        "vote_delta": 3,
        "current_rating": 1028
      }
    }
  ]
}
[file content end]
[file name]: questions.test.json
[file content begin]
{
  "questions": [
    {
      "id": 1,
      "category": {
        "fi": "Ympäristö",
        "en": "Environment",
        "sv": "Miljö"
      },
      "question": {
        "fi": "Pitäisikö kaupungin investoida enemmän pyöräteihin?",
        "en": "Should the city invest more in bicycle paths?",
        "sv": "Bör staden investera mer i cykelvägar?"
      },
      "tags": ["transport", "environment", "infrastructure"],
      "scale": {
        "min": -5,
        "max": 5
      },
      "elo_rating": {
        "base_rating": 1000,
        "comparison_delta": 0,
        "vote_delta": 0,
        "current_rating": 1000,
        "blocked": false,
        "block_reason": "",
        "delta_limits": {
          "comparison_min": -800,
          "comparison_max": 1000,
          "vote_min": -100,
          "vote_max": 1000,
          "community_size": 500,
          "block_percentage_required": 2.0
        },
        "total_comparisons": 0,
        "total_votes": 0,
        "up_votes": 0,
        "down_votes": 0,
        "status": "active",
        "created_at": "2024-01-15T10:00:00Z",
        "last_updated": "2024-01-15T10:00:00Z"
      }
    }
  ],
  "elo_parameters": {
    "base_rating": 1000,
    "k_factor_comparison": 32,
    "k_factor_votes": 1,
    "block_threshold": 0,
    "block_requires_both": true,
    "community_block_percentage": 2.0,
    "min_absolute_votes": 100,
    "max_absolute_votes": 1000,
    "rating_formula": "base_rating + comparison_delta + vote_delta",
    "auto_block_enabled": true,
    "version": "conservative_v1"
  }
}
[file content end]
[file name]: sync_protocol.base.json
[file content begin]
{
  "sync_protocol": {
    "question_flow": {
      "step_1": "user_input -> tmp_new_questions.json",
      "step_2": "tmp_new_questions.json -> new_questions.json",
      "step_3": "new_questions.json -> questions.json", 
      "step_4": "questions.json -> ipfs_questions.json",
      "step_5": "ipfs_questions.json -> IPFS_network"
    },
    "sync_triggers": {
      "auto_sync_interval": 300,
      "manual_sync_trigger": true,
      "on_question_add": true,
      "on_system_start": true,
      "on_ipfs_change": false
    },
    "conflict_resolution": {
      "local_wins": true,
      "ipfs_as_backup": true,
      "manual_intervention_required": false
    }
  }
}
[file content end]
{
  "chain_id": "testivaalit",
  "created_at": "",
  "description": "Fingerprint-ketju kaikille järjestelmän tiedostoille",
  "version": "0.0.1-alpha",
  "blocks": [
    {
      "block_id": 0,
      "timestamp": "",
      "description": "Alkutila asennuksen jälkeen",
      "files": {
        "questions.json": ",
        "new_questions.json",
        "active_questions.json":,
        "ipfs_questions.json":,
        "parties.json":,
        "party_profiles.json"
        "candidates.json": ,
        "candidate_profiles.json":,
        "meta.json": 
      },
      "previous_hash": null,
      "block_hash": ""
    }
  ],
  "current_state": {
    "questions.json": ",
    "new_questions.json",
    "active_questions.json":,
    "ipfs_questions.json":,
    "parties.json":,
    "party_profiles.json"
    "candidates.json": ,
    "candidate_profiles.json":,
    "meta.json": 
  },
  "metadata": {
    "algorithm": "sha256",
    "system_id": "",
    "election_id": "testivaalit"
  }
}
[file name]: system_chain.test.json
[file content begin]
{
  "chain_id": "testivaalit",
  "created_at": "2024-01-15T10:00:00Z",
  "description": "Fingerprint-ketju kaikille järjestelmän tiedostoille",
  "version": "0.1.0-test",
  "blocks": [
    {
      "block_id": 0,
      "timestamp": "2024-01-15T10:00:00Z",
      "description": "Alkutila asennuksen jälkeen",
      "files": {
        "questions.json": "hash_questions_001",
        "new_questions.json": "hash_new_questions_001",
        "active_questions.json": "hash_active_questions_001",
        "ipfs_questions.json": "hash_ipfs_questions_001",
        "parties.json": "hash_parties_001",
        "party_profiles.json": "hash_party_profiles_001",
        "candidates.json": "hash_candidates_001",
        "candidate_profiles.json": "hash_candidate_profiles_001",
        "meta.json": "hash_meta_001"
      },
      "previous_hash": null,
      "block_hash": "block_hash_001"
    }
  ],
  "current_state": {
    "questions_hash": "hash_questions_001",
    "elo_base_rating": 1000,
    "active_comparisons": 0,
    "total_votes": 0,
    "system_version": "0.1.0-test"
  },
  "metadata": {
    "algorithm": "sha256",
    "system_id": "sys_test_001",
    "election_id": "testivaalit_2024",
    "elo_model": "dual_delta"
  }
}
[file content end]
